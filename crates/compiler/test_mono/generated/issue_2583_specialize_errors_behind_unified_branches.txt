procedure Bool.11 (#Attr.2, #Attr.3):
    let Bool.24 : Int1 = lowlevel Eq #Attr.2 #Attr.3;
    ret Bool.24;

procedure Bool.2 ():
    let Bool.23 : Int1 = true;
    ret Bool.23;

procedure List.2 (List.113, List.114):
    let List.648 : U64 = CallByName List.6 List.113;
    let List.644 : Int1 = CallByName Num.22 List.114 List.648;
    if List.644 then
        let List.646 : I64 = CallByName List.66 List.113 List.114;
        let List.645 : [C {}, C I64] = TagId(1) List.646;
        ret List.645;
    else
        let List.643 : {} = Struct {};
        let List.642 : [C {}, C I64] = TagId(0) List.643;
        ret List.642;

procedure List.6 (#Attr.2):
    let List.649 : U64 = lowlevel ListLenU64 #Attr.2;
    ret List.649;

procedure List.66 (#Attr.2, #Attr.3):
    let List.647 : I64 = lowlevel ListGetUnsafe #Attr.2 #Attr.3;
    ret List.647;

procedure List.9 (List.395):
    let List.641 : U64 = 0i64;
    let List.634 : [C {}, C I64] = CallByName List.2 List.395 List.641;
    let List.638 : U8 = 1i64;
    let List.639 : U8 = GetTagId List.634;
    let List.640 : Int1 = lowlevel Eq List.638 List.639;
    if List.640 then
        let List.396 : I64 = UnionAtIndex (Id 1) (Index 0) List.634;
        let List.635 : [C Int1, C I64] = TagId(1) List.396;
        ret List.635;
    else
        let List.637 : Int1 = true;
        let List.636 : [C Int1, C I64] = TagId(0) List.637;
        ret List.636;

procedure Num.22 (#Attr.2, #Attr.3):
    let Num.279 : Int1 = lowlevel NumLt #Attr.2 #Attr.3;
    ret Num.279;

procedure Str.27 (Str.78):
    let Str.232 : [C Int1, C I64] = CallByName Str.60 Str.78;
    ret Str.232;

procedure Str.42 (#Attr.2):
    let Str.240 : {I64, U8} = lowlevel StrToNum #Attr.2;
    ret Str.240;

procedure Str.60 (Str.185):
    let Str.186 : {I64, U8} = CallByName Str.42 Str.185;
    let Str.238 : U8 = StructAtIndex 1 Str.186;
    let Str.239 : U8 = 0i64;
    let Str.235 : Int1 = CallByName Bool.11 Str.238 Str.239;
    if Str.235 then
        let Str.237 : I64 = StructAtIndex 0 Str.186;
        let Str.236 : [C Int1, C I64] = TagId(1) Str.237;
        ret Str.236;
    else
        let Str.234 : Int1 = false;
        let Str.233 : [C Int1, C I64] = TagId(0) Str.234;
        ret Str.233;

procedure Test.0 ():
    let Test.3 : Int1 = CallByName Bool.2;
    if Test.3 then
        let Test.5 : List I64 = Array [];
        let Test.4 : [C Int1, C I64] = CallByName List.9 Test.5;
        dec Test.5;
        ret Test.4;
    else
        let Test.2 : Str = "";
        let Test.1 : [C Int1, C I64] = CallByName Str.27 Test.2;
        dec Test.2;
        ret Test.1;
